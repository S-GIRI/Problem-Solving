class Solution{
    public:
    long long findMinDiff(vector<long long> a, long long n, long long m){
    //code
    // for(long long i=n-1;i>=0;i--){
    //     for(long long j=0;j<i;j++){
    //         if(a[j]>a[j+1])
    //         swap(a[j],a[j+1]);
    //     }
    // }
    sort(a.begin(),a.end());
    long long min=INT_MAX;
    for(long long i=0;i<n;i++){
        if((i+m-1)<n){
        if((a[i+m-1]-a[i])<min)
        min=a[i+m-1]-a[i];
            
        }
        else
        break;
    }
    return min;
    }   
};

//{ Driver Code Starts.
int main() {
	long long t;
	cin>>t;
	while(t--)
	{
		long long n;
		cin>>n;
		vector<long long> a;
		long long x;
		for(long long i=0;i<n;i++)
		{
			cin>>x;
			a.push_back(x);
		}
		
		long long m;
		cin>>m;
		Solution ob;
		cout<<ob.findMinDiff(a,n,m)<<endl;
	}
	return 0;
}
// } Driver Code Ends